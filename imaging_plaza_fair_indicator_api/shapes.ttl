@prefix schema: <http://schema.org/>.
@prefix sd: <https://w3id.org/okn/o/sd#>.
@prefix bio: <https://bioschemas.org/>.
@prefix spe: <https://openschemas.github.io/spec-container/specifications/>.
@prefix rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix sh:   <http://www.w3.org/ns/shacl#> .
@prefix xsd:  <http://www.w3.org/2001/XMLSchema#> .
@prefix shsh: <http://www.w3.org/ns/shacl-shacl#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix ex: <https://epfl.ch/example/> .
@prefix md4i: <http://w3id.org/nfdi4ing/metadata4ing#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .

<https://epfl.ch/example/ImagingOntologyShapes>
	a owl:Ontology ;
	sh:entailment sh:Rules ;
	sh:declare [
		sh:prefix "ex" ;
		sh:namespace <https://epfl.ch/example/> ;
	] .

ex:fairlevel0Shape a sh:NodeShape    
.
ex:fairlevel1Shape a sh:NodeShape ;
      sh:targetClass schema:SoftwareSourceCode ;
			sh:property
                  [sh:path schema:license ;
                  sh:minCount 1;
                  sh:message "Fair level 1"] ,
                  
                  [sh:path schema:citation ;
                  sh:minCount 1;
                  sh:message "Fair level 1"] ,
                  
                  [sh:path schema:name ;
                  sh:minCount 1;
                  sh:message "Fair level 1"];    
.

ex:fairlevel2Shape a sh:NodeShape ;
      sh:targetClass schema:SoftwareSourceCode ;
			sh:property 
                  [sh:path sd:readme ;
                  sh:minCount 1 ;
                  sh:message "Fair level 2"] ;
      sh:and (ex:fairlevel1Shape)
.

ex:fairlevel3Shape a sh:NodeShape ;
      sh:targetClass schema:SoftwareSourceCode ;
			sh:property 
                  [sh:path schema:softwareRequirements ;
                  sh:minCount 1 ;
                  sh:message "Fair level 3"] ;
      sh:and (ex:fairlevel2Shape) 
.

ex:fairlevel4Shape a sh:NodeShape ;
      sh:targetClass schema:SoftwareSourceCode ;
			sh:property 
                  [sh:path schema:memoryRequirements ;
                  sh:minCount 1;
                  sh:message "Fair level 4"] ,
                  
                  [sh:path sd:hasDocumentation ;
                  sh:minCount 1;
                  sh:message "Fair level 4"] ,
                  
                  [sh:path sd:hasParameter ;
                  sh:minCount 1;
                  sh:message "Fair level 4"] ;
      sh:and (ex:fairlevel3Shape)
.

ex:fairlevel5Shape a sh:NodeShape ;
      sh:targetClass schema:SoftwareSourceCode ;
			sh:property
                  [sh:path sd:hasExecutableInstructions ;
                  sh:minCount 1;
                  sh:message "Fair level 5"] ,
                 
                  [sh:path sd:hasExecutableNotebook ;
                  sh:minCount 1;
                  sh:message "Fair level 5"];
      sh:and (ex:fairlevel4Shape) 
.

schema:SoftwareSourceCode
a sh:NodeShape, rdfs:Class ;
sh:property schema:SoftwareApplication-applicationCategory ,
              schema:CreativeWork-citation ,
              schema:SoftwareSourceCode-codeRepository ,
              schema:CreativeWork-conditionsOfAccess ,
              schema:CreativeWork-dateCreated ,
              schema:CreativeWork-datePublished ,
              schema:Thing-description ,
              schema:SoftwareApplication-featureList ,
              schema:Thing-image ,
              schema:CreativeWork-isAccessibleForFree ,
              schema:CreativeWork-isBasedOn ,
              schema:CreativeWork-license ,
              schema:CreativeWork-maintainer ,
              schema:SoftwareApplication-memoryRequirements ,
              schema:Thing-name ,
              schema:SoftwareApplication-operatingSystem ,
              schema:CreativeWork-producer ,
              schema:SoftwareSourceCode-programmingLanguage ,
              schema:SoftwareApplication-softwareRequirements ,
              schema:SoftwareApplication-processorRequirements ,
              ex:SoftwareApplication-requiresGPUShape ,
              schema:SoftwareApplication-supportingData ,
              schema:CreativeWork-creativeWorkStatus , 
              schema:Thing-url ,
              schema:Thing-identifier ,
              sd:SoftwareApplication-hasAcknowledgements ,
              sd:SoftwareApplication-hasDocumentation ,
              sd:SoftwareApplication-hasExecutableInstructions ,
              sd:SoftwareApplication-hasExecutableNotebook ,
              sd:SoftwareApplication-hasParameter ,
              sd:SoftwareApplication-readme ,
              sd:SoftwareApplication-hasFunding ,
              sd:SoftwareConfiguration-hasSoftwareImage ,
              ex:SoftwareApplication-imagingModalityShape ,
              ex:fairLevelShape ;
 sh:rule [
		a sh:TripleRule ;
		sh:subject sh:this ;
		sh:predicate ex:fairLevel ;
		sh:object "Fair level 0" ;
		sh:condition ex:fairlevel0Shape ];      
  sh:rule [
		a sh:TripleRule ;
		sh:subject sh:this ;
		sh:predicate ex:fairLevel ;
		sh:object "Fair level 1" ;
		sh:condition ex:fairlevel1Shape ];           

  sh:rule [
		a sh:TripleRule ;
		sh:subject sh:this ;
		sh:predicate ex:fairLevel ;
		sh:object "Fair level 2" ;
		sh:condition ex:fairlevel2Shape ;
	] ;
  sh:rule [
		a sh:TripleRule ;
		sh:subject sh:this ;
		sh:predicate ex:fairLevel ;
		sh:object "Fair level 3" ;
		sh:condition ex:fairlevel3Shape ;
	] ;
  sh:rule [
		a sh:TripleRule ;
		sh:subject sh:this ;
		sh:predicate ex:fairLevel ;
		sh:object "Fair level 4" ;
		sh:condition ex:fairlevel4Shape
	] ;
  sh:rule [
		a sh:TripleRule ;
		sh:subject sh:this ;
		sh:predicate ex:fairLevel ;
		sh:object "Fair level 5" ;
		sh:condition ex:fairlevel5Shape
	] ;
.
ex:fairLevelShape a sh:PropertyShape ;
  sh:path ex:fairLevel ;
  sh:datatype xsd:string ;
  sh:minCount 1 ;
  .

ex:SoftwareApplication-imagingModalityShape 
  a sh:PropertyShape ;
  sh:path ex:imagingModality ;
  sh:in ("MRI" "CAT" "X-Ray" "Any") ;
  .

schema:SoftwareApplication-applicationCategory
  a sh:PropertyShape ;
  sh:path schema:applicationCategory ;
  sh:in ("Feature extraction" "Segmentation" "Conversion" );
  .
schema:SoftwareApplication-processorRequirements
  a sh:PropertyShape ;
  sh:path schema:processorRequirements ;
  sh:datatype xsd:string ;
  sh:in ("ARM64" "AMD64")
  .

ex:SoftwareApplication-requiresGPUShape
  a sh:PropertyShape ;
  sh:path ex:requiresGPU ;
  sh:datatype xsd:boolean .

schema:CreativeWork-citation
  a sh:PropertyShape ;
  sh:path schema:citation ;
  sh:minCount 1 ;
  sh:maxCount 1 ;
  sh:datatype xsd:string ;
  sh:pattern "^http.*" ;
.
schema:SoftwareSourceCode-codeRepository
  a sh:PropertyShape ;
  sh:path schema:codeRepository ;
  sh:pattern "^http.*" ;
  sh:minCount 1 ;
  sh:maxCount 1 ;
.

schema:CreativeWork-conditionsOfAccess
  a sh:PropertyShape ;
  sh:path schema:conditionsOfAccess ;
  sh:datatype xsd:string ;

.        

schema:CreativeWork-dateCreated
  a sh:PropertyShape ;
  sh:path schema:dateCreated ;
  sh:minCount 1 ;
  sh:maxCount 1 ;
  sh:datatype xsd:date ;
  .

schema:CreativeWork-datePublished
  a sh:PropertyShape ;
  sh:path schema:datePublished ;
  sh:datatype xsd:date ;  
  sh:minCount 1 ;
.

schema:Thing-description
  a sh:PropertyShape ;
  sh:path schema:description ;
  sh:datatype xsd:string ;
  sh:maxLength 2000 ;
  sh:minCount 1 ;
.

schema:SoftwareApplication-featureList
  a sh:PropertyShape ;
  sh:path schema:featureList ;
  sh:datatype xsd:string ;
.

schema:Thing-image
  a sh:PropertyShape ;
  sh:path schema:image ;
  sh:class schema:ImageObject ; 
  sh:minCount 1 ;
.

schema:ImagingObject 
  a sh:NodeShape, rdfs:Class ;
  sh:property schema:Thing-url ;
  sh:property schema:CreativeWork-keywords ;
  .


schema:CreativeWork-isAccessibleForFree
  a sh:PropertyShape ;
  sh:path schema:isAccessibleForFree ;
  sh:datatype xsd:boolean ;
.

schema:CreativeWork-isBasedOn
  a sh:PropertyShape ;
  sh:path schema:isBasedOn ;
  sh:pattern "^http.*" ;
  .

schema:CreativeWork-keywords
  a sh:PropertyShape ;
  sh:path schema:keywords ;
  sh:datatype xsd:string ;
  sh:in ("logo" "illustrative image" "before image" "after image") ;
  sh:minCount 1 ;
  sh:maxCount 1 ;
.

schema:CreativeWork-license
  a sh:PropertyShape ;
  sh:path schema:license ;
  sh:pattern ".*spdx\\.org.*" ;
  sh:minCount 1 ;
.

schema:CreativeWork-maintainer
  a sh:PropertyShape ;
  sh:path schema:maintainer ;
  sh:minCount 1 ;
  sh:or (
      [
        sh:class schema:Organization ;
      ]
      [
        sh:class schema:Person ;
      ]
    ) ;
.

schema:Person
a sh:NodeShape ;
  sh:property schema:Person-email ;
  sh:property schema:Person-familyName ;
  sh:property schema:Person-givenName ;
  sh:property md4i:orcidIdShape ;
.

schema:Person-email
  a sh:PropertyShape ;
  sh:path schema:email ;
  sh:datatype xsd:string ;
.

schema:Person-familyName
  a sh:PropertyShape ;
  sh:path schema:familyName ;
  sh:datatype xsd:string ;
  sh:minCount 1 ;
  .

schema:Person-givenName
  a sh:PropertyShape ;
  sh:path schema:givenName ;
  sh:datatype xsd:string ;
  sh:minCount 1 ;
.

md4i:orcidIdShape
  a sh:PropertyShape ;
  sh:path md4i:orcidId ;
  sh:datatype xsd:string ;
  .

schema:Organization
a sh:NodeShape ;
sh:property schema:Organization-legalName ;
sh:property md4i:hasRorIdShape ;
.

schema:SoftwareApplication-memoryRequirements
  a sh:PropertyShape ;
  sh:path schema:memoryRequirements ;
  sh:datatype xsd:string ;
.

schema:Thing-name
  a sh:PropertyShape ;
  sh:path schema:name ;
  sh:datatype xsd:string ;
  sh:minCount 1 ;
  sh:maxLength 60
.

schema:SoftwareApplication-operatingSystem
  a sh:PropertyShape ;
  sh:path schema:operatingSystem ;
  sh:in ("Linux" "Windows" "MacOS" "Other") ;
.

schema:CreativeWork-producer
  a sh:PropertyShape ;
  sh:path schema:producer ;
  sh:minCount 1 ;
  sh:or (
      [
        sh:class schema:Organization ;
      ]
      [
        sh:class schema:Person ;
      ]
    ) ;
.

schema:SoftwareSourceCode-programmingLanguage
  a sh:PropertyShape ;
  sh:path schema:programmingLanguage ;
  sh:class schema:ComputerLanguage ;
.


schema:SoftwareApplication-softwareRequirements
  a sh:PropertyShape ;
  sh:path schema:softwareRequirements ;
  sh:datatype xsd:string ;
.

schema:SoftwareApplication-softwareVersion
  a sh:PropertyShape ;
  sh:path schema:softwareVersion ;
  sh:datatype xsd:string ;
  sh:pattern "[0-9]+\\.[0-9]+\\.[0-9]+" ;
  sh:minCount 1 ;
  .

schema:SoftwareApplication-supportingData
  a sh:PropertyShape ;
  sh:path schema:supportingData ;
  sh:class schema:DataFeed ;
.

schema:Thing-url
  a sh:PropertyShape ;
  sh:path schema:url ;
  sh:pattern "^http.*" ;
.

sd:SoftwareApplication-hasAcknowledgements
    a sh:PropertyShape ;
    sh:path sd:hasAcknowledgements ;
    sh:datatype xsd:string ;
    .

sd:SoftwareApplication-hasDocumentation
    a sh:PropertyShape ;
    sh:path sd:hasDocumentation ;
    sh:pattern "^http.*" ;
    .

sd:SoftwareApplication-hasExecutableInstructions
    a sh:PropertyShape ;
    sh:path sd:hasExecutableInstructions ;
    sh:datatype xsd:string ;
    .                           

sd:SoftwareApplication-hasExecutableNotebook
    a sh:PropertyShape ;
    sh:path sd:hasExecutableNotebook ;
    sh:pattern "^http.*" ;
    .

sd:SoftwareApplication-hasParameter
    a sh:PropertyShape ;
    sh:path sd:hasParameter ;
    sh:class bio:FormalParameter ;
    .

sd:SoftwareApplication-readme
    a sh:PropertyShape ;
    sh:path sd:readme ;
    sh:pattern "^http.*" ;
  .

schema:CreativeWork-creativeWorkStatus
  a sh:PropertyShape ;
  sh:path schema:creativeWorkStatus ;
  sh:datatype xsd:string ;
  .

schema:DataFeed
a sh:NodeShape ;
sh:property schema:Thing-description ,
              schema:DataDownload-contentURL ,
              schema:Dataset-measurementTechnique ,
              schema:Thing-name ,
              schema:Dataset-variableMeasured ;
              
.   

schema:DataDownload-contentURL
  a sh:PropertyShape ;
  sh:path schema:contentUrl ;
  sh:pattern "^http.*" ;
  sh:minCount 1 ;
.



sd:SoftwareApplication-hasFunding
    a sh:PropertyShape ;
    sh:path sd:hasFunding ;
    sh:class sd:FundingInformation ;
    .
    

schema:Thing-identifier
  a sh:PropertyShape ;
  sh:path schema:identifier ;
  sh:datatype xsd:string ;
  sh:minCount 1 ;
.

sd:FundingInformation-fundingSource
    a sh:PropertyShape ;
    sh:path sd:fundingSource ;
    sh:class schema:Organization ;
    sh:minCount 1 ;
    .
sd:FundingInformation-fundingGrant a sh:PropertyShape ;
	sh:path sd:fundingGrant ;
	sh:datatype xsd:string ;
	sh:minCount 1.

sd:FundingInformation
    a sh:NodeShape ;
    sh:property schema:Thing-identifier,
                sd:FundingInformation-fundingGrant,
                sd:FundingInformation-fundingSource ;
    .



bio:FormalParameter
    a sh:NodeShape ;
    sh:property schema:Thing-description ,
                schema:CreativeWork-encodingFormat,
                schema:Thing-name,
                sd:DatasetSpecification-hasDimensionality,
                sd:DatasetSpecification-hasFormat ,
                schema:PropertyValueSpecification-defaultValue,
                schema:PropertyValueSpecification-valueRequired
    .

schema:CreativeWork-encodingFormat
  a sh:PropertyShape ;
  sh:path schema:encodingFormat ;
  sh:pattern ".*iana.org/assignments/media-types/.*" ;
.

sd:DatasetSpecification-hasDimensionality
    a sh:PropertyShape ;
    sh:path sd:hasDimensionality ;
    sh:datatype xsd:integer ;
    sh:minExclusive 0 ;
    .

sd:DatasetSpecification-hasFormat
    a sh:PropertyShape ;
    sh:path sd:hasFormat ;
    sh:datatype xsd:string ;
    .

schema:PropertyValueSpecification-defaultValue
  a sh:PropertyShape ;
  sh:path schema:defaultValue ;
  sh:datatype xsd:string ;

.

schema:PropertyValueSpecification-valueRequired
  a sh:PropertyShape ;
  sh:path schema:valueRequired ;
  sh:datatype xsd:boolean ;
.

sd:SoftwareConfiguration-hasSoftwareImage
    a sh:PropertyShape ;
    sh:path sd:hasSoftwareImage ;
    sh:class sd:SoftwareImage;
    .

sd:SoftwareImage    a sh:NodeShape ;
    sh:property schema:Thing-name ,
                schema:Thing-description ,
                schema:SoftwareApplication-softwareVersion ,
                sd:SoftwareImage-availableInRegistry ;
    .



sd:SoftwareImage-availableInRegistry
    a sh:PropertyShape ;
    sh:pattern "^http.*" ;
    sh:path sd:availableInRegistry ;
    .

schema:Dataset-measurementTechnique
  a sh:PropertyShape ;
  sh:path schema:measurementTechnique ;
  sh:datatype xsd:string ;
.

schema:Dataset-variableMeasured
  a sh:PropertyShape ;
  sh:path schema:variableMeasured ;
        sh:datatype xsd:string ;
.

schema:Organization-legalName
  a sh:PropertyShape ;
  sh:path schema:legalName ;
  sh:datatype xsd:string ;
  sh:minCount 1 ;
.

md4i:hasRorIdShape
  a sh:PropertyShape ;
  sh:path md4i:hasRorId ;
  sh:pattern "^http.*" ;
  .

schema:SoftwareSourceCode
  a rdfs:Class ;
  rdfs:comment "A software application." ;
  rdfs:label "Software application" ;
  rdfs:subClassOf schema:CreativeWork .

schema:license a rdf:Property;
  rdfs:comment "A license document that applies to this content, typically indicated by URL.";
  rdfs:label "License" .

schema:citation a rdf:Property;
  rdfs:comment "A DOI URL citation to publication about this software. Should always be a full and valid DOI URL.";
  rdfs:label "Citation" .

schema:dateCreated a rdf:Property;
  rdfs:comment "The date on which the repository was created.";
  rdfs:label "Date created" .

schema:datePublished a rdf:Property;
  rdfs:comment "Date of the latest published release.";
  rdfs:label "Date published" .

schema:maintainer a rdf:Property;
  rdfs:comment "A maintainer of a Dataset, software package or other Project. A maintainer is a Person or Organization that manages contributions to, and/or publication of, some (typically complex) artifact.";
  rdfs:label "Maintainer" .

schema:name a rdf:Property;
  rdfs:comment "The name of the item.";
  rdfs:label "Name";
  rdfs:subPropertyOf rdfs:label .

schema:memoryRequirements a rdf:Property;
  rdfs:comment "Minimum memory requirements.";
  rdfs:label "Memory requirements" .

ex:fairLevel a rdf:Property;
  rdfs:comment "A score of 1-5 rating the Findability, Accessibility, Interoperability and Reusability of a piece of software based on the presence of certain properties for an instance of software";
  rdfs:label "FAIR Level" .

schema:applicationCategory a rdf:Property;
  rdfs:comment "Type of software application, e.g. 'Game, Multimedia'.";
  rdfs:label "Application category" .

schema:codeRepository a rdf:Property;
  rdfs:comment "Primary link to the repository where the un-compiled, human readable code and related code is located (GitLab, GitHub, CodePlex etc.).";
  rdfs:label "Code repository" .

schema:conditionsOfAccess a rdf:Property;
  rdfs:comment "Conditions that affect the availability of, or method(s) of access to, an item. e.g. log-in required ";
  rdfs:label "Conditions of access" .

schema:description a rdf:Property;
  rdfs:comment "A description of the item.";
  rdfs:label "Description" .

schema:featureList a rdf:Property;
  rdfs:comment "Features or modules provided by this application (and possibly required by other applications).";
  rdfs:label "Feature list" .

schema:image a rdf:Property;
  rdfs:comment "An image of the item. This can be a URL or a fully described ImageObject.";
  rdfs:label "Image" .

schema:isAccessibleForFree a rdf:Property;
  rdfs:comment "A flag to signal that the item, event, or place is accessible for free.";
  rdfs:label "Is accessible for free" .

schema:isBasedOn a rdf:Property;
  rdfs:comment "A resource from which this work is derived or from which it is a modification or adaption.";
  rdfs:label "Is based on" .

schema:email a rdf:Property;
  rdfs:comment "Email address.";
  rdfs:label "E-mail" .

schema:familyName a rdf:Property;
  rdfs:comment "Family name. In the U.S., the last name of a Person.";
  rdfs:label "Family name" .

schema:givenName a rdf:Property;
  rdfs:comment "Given name. In the U.S., the first name of a Person.";
  rdfs:label "Given name" .

schema:name a rdf:Property;
  rdfs:comment "The name of a person, in the US their first and last name(s) seperated by spaces";
  rdfs:label "Name" .

md4i:orcidId a rdf:Property ;
  rdfs:comment "The ORCID ID of a person" ;
  rdfs:label "Has ORCID ID" .

md4i:hasRorId a rdf:Property ;
  rdfs:comment "A Research Organization Registry identifier, that points to a research organization" ;
  rdfs:label "Has ROR ID" .

schema:legalName a rdf:Property;
  rdfs:comment "The official name of the organization, e.g. the registered company name.";
  rdfs:label "Legal name" .

schema:operatingSystem a rdf:Property;
  rdfs:comment "Operating systems supported (Windows 7, OS X 10.6, Android 1.6).";
  rdfs:label "Operating system" .

schema:producer a rdf:Property;
  rdfs:comment "The person or organization who produced the work (e.g. music album, movie, TV/radio series etc.).";
  rdfs:label "Producer" .

schema:programmingLanguage a rdf:Property;
  rdfs:comment "The computer programming language.";
  rdfs:label "Programming Language" .

schema:softwareRequirements a rdf:Property;
  rdfs:comment "Special third party dependencies (e.g. CUDA, GPU related requirements).";
  rdfs:label "Software requirements" .

schema:softwareVersion a rdf:Property;
  rdfs:comment "Version of the software instance.";
  rdfs:label "Software version" .

schema:url a rdf:Property;
  rdfs:comment "Fill in any URL related to this repository. e.g. related lab or project website.";
  rdfs:label "URL" .

schema:identifier a rdf:Property;
  rdfs:comment "Represents any kind of unique string to identify something, such as ISBNs, GTIN codes, UUIDs etc.";
  rdfs:label "Identifier" .

schema:defaultValue a rdf:Property;
  rdfs:comment "The default value of the input.  For properties that expect a literal, the default is a literal value, for properties that expect an object, it's an ID reference to one of the current values.";
  rdfs:label "Default value" .

schema:valueRequired a rdf:Property;
  rdfs:comment "Whether the property must be filled in to complete the action.  Default is false.";
  rdfs:label "Value required" .

schema:supportingData a rdf:Property;
  rdfs:comment "Supporting data for a SoftwareApplication.";
  rdfs:label "Supporting data" .

schema:distribution a rdf:Property;
  rdfs:comment "A downloadable form of this dataset, at a specific location, in a specific format." ;
  rdfs:label "Distribution" .

schema:encodingFormat a rdf:Property;
  rdfs:comment "Expressed using a MIME format (http://www.iana.org/assignments/media-types/media-types.xhtml).";
  rdfs:label "Encoding format" .

schema:measurementTechnique a rdf:Property;
  rdfs:comment "A technique or technology used in a Dataset corresponding to the method used for measuring the corresponding variable(s)." ;
  rdfs:label "Measurement technique" .

schema:variableMeasured a rdf:Property;
  rdfs:comment "The variables that are measured in some dataset, described as text.";
  rdfs:label "Variable measured" .

ex:imagingModality a rdf:Property;
  rdfs:comment "Technique or method used to create images of the interior of a body or an object for which this software was designed.";
  rdfs:label "Imaging modality" .

schema:creativeWorkStatus a rdf:Property;
  rdfs:comment "The status of a creative work in terms of its stage in a lifecycle. e.g. Incomplete, Draft, Published, Obsolete.";
  rdfs:label "Creative work status" .

schema:keywords a rdf:Property;
  rdfs:comment "The keywords/tags used to describe this content."@en;
  rdfs:label "Keywords"@en .

ex:requiresGPU a rdf:Property;
  rdfs:comment "Stipulates whether something requires a graphical processing unit such as a NVIDEA or AMD graphics card";
  rdfs:label "Requires GPU" .

schema:processorRequirements a rdf:Property;
  rdfs:comment "Processor architecture required to run the application.";
  rdfs:label "Processor requirements" .

sd:hasInput a rdf:Property;
  rdfs:comment "Property that links a model configuration to the input types expected by it."@en;
  rdfs:label "Has input"@en .

sd:hasOutput a rdf:Property;
  rdfs:comment "Property that expresses what are the outputs of a model"@en;
  rdfs:label "Has output"@en .

sd:hasParameter a rdf:Property;
  rdfs:comment "Property that indicates the parameters of a model configuration"@en;
  rdfs:label "Has parameter"@en .

sd:hasFunding a rdf:Property;
  rdfs:comment "Property that links a software project to its funding information"@en;
  rdfs:label "Has funding information"@en .

sd:hasSoftwareImage a rdf:Property;
  rdfs:comment "Function to link a function with its corresponding container"@en;
  rdfs:label "Has software image"@en .

sd:fundingSource a rdf:Property;
  rdfs:comment "Link to the organization funding a software component"@en;
  rdfs:label "Funding source"@en;
  rdfs:subPropertyOf owl:topObjectProperty .

sd:readme a rdf:Property;
  rdfs:comment "URl to the readme file of a software component"@en;
  rdfs:label "Readme"@en;
  rdfs:subPropertyOf <https://codemeta.github.io/terms/readme> .

sd:hasDocumentation a rdf:Property;
  rdfs:comment "Pointer to the documentation of the model"@en;
  rdfs:label "Has documentation"@en .

sd:hasExecutableInstructions a rdf:Property;
  rdfs:comment "Human-readable instructions that indicate how a software component should be executed."@en;
  rdfs:label "Has executable instructions"@en .

sd:hasExecutableNotebook a rdf:Property;
  rdfs:comment "Property that links a software component with an executable notebook (e.g., Jupyter notebook)."@en;
  rdfs:label "Has executable notebook"@en .

sd:hasAcknowledgements a rdf:Property;
  rdfs:comment "String with the people, organizations and other contributors acknowledged by the authors."@en;
  rdfs:label "Has acknowledgements"@en .

sd:fundingGrant a rdf:Property;
  rdfs:comment "Grant number used for funding"@en;
  rdfs:label "Funding grant"@en;
  rdfs:subPropertyOf <https://codemeta.github.io/terms/funding> .

sd:hasFormat a rdf:Property;
  rdfs:comment "Format followed by a file. For example, txt, nc, etc."@en;
  rdfs:label "Has format"@en .

sd:availableInRegistry a rdf:Property;
  rdfs:comment "URL to registry of where software image can be found. For example, https://hub.docker.com/r/pytorch/pytorch"@en;
  rdfs:label "Available in registry"@en .

sd:hasDimensionality a rdf:Property;
  rdfs:comment "Property to indicate dimensionality of the input or output of a dataset specification"@en;
  rdfs:label "Has dimensionality"@en .

schema:Person
  a rdfs:Class ;
  rdfs:comment "A person (alive, dead, undead, or fictional)." ;
  rdfs:label "Person" ;
  rdfs:subClassOf schema:Thing ;
  owl:equivalentClass <http://xmlns.com/foaf/0.1/Person> ;
.

schema:Organization
  a rdfs:Class ;
  rdfs:comment "An organization such as a school, NGO, corporation, club, etc." ;
  rdfs:label "Organization" ;
  rdfs:subClassOf schema:Thing ;
.

schema:ComputerLanguage
  a rdfs:Class ;
  rdfs:comment "This type covers computer programming languages such as Scheme and Lisp, as well as other language-like computer representations. Natural languages are best represented with the Language type." ;
  rdfs:label "Computer language" ;
  rdfs:subClassOf schema:Intangible ;
.


schema:DataFeed
  a rdfs:Class ;
  rdfs:comment "A single feed providing structured information about one or more entities or topics." ;
  rdfs:label "Data feed" ;
  rdfs:subClassOf schema:Dataset ;
.   


schema:Grant
  a rdfs:Class ;
  rdfs:comment "A grant, typically financial or otherwise quantifiable, of resources." ;
  rdfs:label "Grant" ;
  rdfs:subClassOf schema:Intangible ;
.

sd:FundingInformation
    rdfs:comment "A class to represent the funding information of a software project"@en ;
    rdfs:label "Funding Information"@en ; 
    .

sd:DatasetSpecification
    rdfs:subClassOf <http://purl.org/linked-data/cube#DataStructureDefinition> ;
    rdfs:comment "Class designed to describe a type of input or output used or produced by a model. For example, Topoflow has several inputs. One of them is a text file with precipitation values. The representation of this input is an instance of a dataset specification."@en ;
    rdfs:label "Dataset Specification"@en ;
    .

bio:FormalParameter
    rdfs:subClassOf <http://purl.org/linked-data/cube#DataStructureDefinition> ;
    rdfs:comment "A FormalParameter is an identified variable used to stand for the actual value(s) that are consumed/produced by a set of steps"@en ;
    rdfs:label "Formal Parameter"@en ;

    .

sd:SoftwareImage    
    rdfs:subClassOf sd:Software ;
    rdfs:comment "An image that virtualizes the functionality of a given software. For example, a Docker container."@en ;
    rdfs:label "Software Image"@en ;
    .
